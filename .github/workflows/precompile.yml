name: windows-precompile

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/Makefile.win'
      - '.github/workflows/macos.yml'
      - '.github/workflows/windows.yml'
      - '.github/workflows/linux.yml'
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  precompile:
    if: "!contains(github.event.pull_request.labels.*.name, 'skip ci')"
    runs-on: windows-latest
    name: Windows ${{ matrix.pair.msbuild_platform }} - OTP ${{ matrix.pair.otp_version }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              arch_name: aarch64
              msbuild_platform: ARM64
              vcvarsall: amd64_arm64
              otp_version: "25"
              elixir_version: "1.15"
              CMAKE_GENERATOR_TYPE: "Visual Studio 17"
              CMAKE_TOOLCHAIN_FILE: "cc_toolchain/aarch64-windows-msvc.cmake"
          - pair:
              arch_name: x86_64
              msbuild_platform: x64
              vcvarsall: x64
              otp_version: "25"
              elixir_version: "1.15"
          - pair:
              arch_name: aarch64
              msbuild_platform: ARM64
              vcvarsall: amd64_arm64
              otp_version: "26"
              elixir_version: "1.15"
              CMAKE_GENERATOR_TYPE: "Visual Studio 17"
              CMAKE_TOOLCHAIN_FILE: "cc_toolchain/aarch64-windows-msvc.cmake"
          - pair:
              arch_name: x86_64
              msbuild_platform: x64
              vcvarsall: x64
              otp_version: "26"
              elixir_version: "1.15"

    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.pair.otp_version }}
          elixir-version: ${{ matrix.pair.elixir_version }}

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.pair.vcvarsall }}

      - name: Install rebar3
        shell: bash
        run: |
          curl -fSL https://s3.amazonaws.com/rebar3/rebar3 -o rebar3 && chmod +x rebar3
          cat <<EOF >rebar3.cmd
          @echo off
          setlocal
          set rebarscript=%~f0
          escript.exe "%rebarscript:.cmd=%" %*
          EOF

      - name: Precompile
        shell: bash
        run: |
          export PATH="$(pwd):$PATH"

          if [ "${{ matrix.pair.vcvarsall }}" = "amd64_arm64" ]; then
            export CMAKE_GENERATOR_TYPE="${{ matrix.pair.CMAKE_GENERATOR_TYPE }}"
            export MSBUILD_PLATFORM="${{ matrix.pair.msbuild_platform }}"
            export CMAKE_TOOLCHAIN_FILE="$(pwd)/${{ matrix.pair.cmake_toolchain_file }}"
            export TARGET_ARCH=aarch64
            export TARGET_OS=windows
            export TARGET_ABI=msvc
          fi

          rebar3 deps
          rebar3 compile

          export NIF_VERSION="$(erl -noshell -eval "io:format('~ts', [erlang:system_info(nif_version)])." -s erlang halt)"
          export PKG_NAME=dll_loader_helper_beam-nif-${NIF_VERSION}-${{ matrix.pair.arch_name }}-windows-msvc-${GITHUB_REF##*/}
          mkdir -p "${PKG_NAME}"
          cp -a ./priv "${PKG_NAME}"
          tar -czf "${PKG_NAME}.tar.gz" "${PKG_NAME}"
          rm -rf "${PKG_NAME}"
          ls -lah "${PKG_NAME}.tar.gz"
          mkdir -p ../artifacts
          mv "${PKG_NAME}.tar.gz" ../artifacts

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/dll_loader_helper_beam-*.tar.gz
