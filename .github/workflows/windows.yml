name: windows

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '.github/workflows/macos.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/precompile.yml'
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '.github/workflows/macos.yml'
      - '.github/workflows/linux.yml'
      - '.github/workflows/precompile.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: "!contains(github.event.pull_request.labels.*.name, 'skip ci')"
    runs-on: windows-latest
    name: Windows ${{ matrix.pair.msbuild_platform }} - OTP ${{ matrix.pair.otp_version }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              msbuild_platform: ARM64
              vcvarsall: amd64_arm64
              otp_version: "25"
              elixir_version: "1.15"
              CMAKE_GENERATOR_TYPE: "Visual Studio 17"
              CMAKE_TOOLCHAIN_FILE: "cc_toolchain/aarch64-windows-msvc.cmake"
          - pair:
              msbuild_platform: x64
              vcvarsall: x64
              otp_version: "25"
              elixir_version: "1.15"
          - pair:
              msbuild_platform: ARM64
              vcvarsall: amd64_arm64
              otp_version: "26"
              elixir_version: "1.15"
              CMAKE_GENERATOR_TYPE: "Visual Studio 17"
              CMAKE_TOOLCHAIN_FILE: "cc_toolchain/aarch64-windows-msvc.cmake"
          - pair:
              msbuild_platform: x64
              vcvarsall: x64
              otp_version: "26"
              elixir_version: "1.15"

    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.pair.otp_version }}
          elixir-version: ${{ matrix.pair.elixir_version }}

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.pair.vcvarsall }}

      - name: Install rebar3
        shell: bash
        run: |
          curl -fSL https://s3.amazonaws.com/rebar3/rebar3 -o rebar3 && chmod +x rebar3
          cat <<EOF >rebar3.cmd
          @echo off
          setlocal
          set rebarscript=%~f0
          escript.exe "%rebarscript:.cmd=%" %*
          EOF

      - name: rebar3 compile
        shell: bash
        run: |
          export PATH="$(pwd):$PATH"

          if [ "${{ matrix.pair.vcvarsall }}" = "amd64_arm64" ]; then
            export CMAKE_GENERATOR_TYPE="${{ matrix.pair.CMAKE_GENERATOR_TYPE }}"
            export MSBUILD_PLATFORM="${{ matrix.pair.msbuild_platform }}"
            export CMAKE_TOOLCHAIN_FILE="$(pwd)/${{ matrix.pair.cmake_toolchain_file }}"
            export TARGET_ARCH=aarch64
          fi

          rebar3 deps
          rebar3 compile

          cd ..

      - name: EUnit Test
        shell: bash
        if: matrix.pair.vcvarsall == 'x64'
        run: |
          export PATH="$(pwd):$PATH"

          if [ "${{ matrix.pair.vcvarsall }}" = "amd64_arm64" ]; then
            export CMAKE_GENERATOR_TYPE="${{ matrix.pair.CMAKE_GENERATOR_TYPE }}"
            export MSBUILD_PLATFORM="${{ matrix.pair.msbuild_platform }}"
            export CMAKE_TOOLCHAIN_FILE="$(pwd)/${{ matrix.pair.cmake_toolchain_file }}"
            export TARGET_ARCH=aarch64
          fi

          rebar3 eunit
          cd ..
